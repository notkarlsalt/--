
local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Window = OrionLib:MakeWindow({ Name = "vadrifts.byp |  V1.4.0", HidePremium = false, SaveConfig = false, ConfigFolder = "OrionTest", IntroEnabled = false })

local Tab = Window:MakeTab({
    Name = "Home",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local Section = Tab:AddSection({
    Name = "Chat Filter"
})

local function checkForTag(message)
    local success, isTagged = pcall(function()
        return game:GetService("Chat"):FilterStringForBroadcast(message, game.Players.LocalPlayer)
    end)
    return success and isTagged ~= message
end

local function sendMessage(message)
    if checkForTag(message) then
        OrionLib:MakeNotification({
            Name = "Tag Detection",
            Content = "This message might be patched! Try clicking 'Fix Bypasses' and try again!",
            Duration = 5
        })
    else
        game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(message, "All")
    end
end

Tab:AddButton({
    Name = "Send 'fuck'",
    Callback = function()
        sendMessage("fuck")
    end
})

Tab:AddButton({
    Name = "Send 'ben'",
    Callback = function()
        sendMessage("ben")
    end
})

Tab:AddButton({
    Name = "Send 'Vagina'",
    Callback = function()
        sendMessage("V󠀕󠀕󠀕󠀕󠀕󠀕󠀕󠀕󠀕󠀖󠀕a󠀕󠀕󠀕󠀕󠀕󠀕󠀕󠀕󠀕󠀖󠀕g󠀕󠀕󠀕󠀕󠀕󠀕󠀕󠀕󠀕󠀖󠀕і󠀕󠀕󠀕󠀕󠀕󠀕󠀕󠀕󠀕󠀖󠀕n󠀕󠀕󠀕󠀕󠀕󠀕󠀕󠀕󠀕󠀖󠀕a")
    end
})

heres a script that might help:
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TextChatService = game:GetService("TextChatService")
local IsLegacy = (TextChatService.ChatVersion == Enum.ChatVersion.LegacyChatService)
local ChatRemote = ReplicatedStorage:FindFirstChild("SayMessageRequest", true)
local Channel = not IsLegacy and TextChatService.TextChannels.RBXGeneral

local Chat = function(Message)
    if IsLegacy then
game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Message", "All")
    else
game:GetService("TextChatService").TextChannels.RBXGeneral:SendAsync("Message")
